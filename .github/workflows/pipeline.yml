name: CI

on:
  push:
    branches:
      - master

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 10
      uses: actions/setup-node@v1
      with:
        version: 10
    - name: Prepare
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export PACKAGE_VERSION=$(cat $GITHUB_WORKSPACE/packages/ppx/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
        git checkout -b release/$PACKAGE_VERSION
        g rm -rf --cached .
        echo "{\"name\": \"lenses-ppx\", \"version\": \"$PACKAGE_VERSION\", \"postinstall\": \"mv \$(uname | tr '[A-Z]' '[a-z]') ./ppx\"}" > $GITHUB_WORKSPACE/package.json
        git add $GITHUB_WORKSPACE
        g commit "Prepare release"
        git push origin release/$PACKAGE_VERSION

  build:
    runs-on: ${{ matrix.os }}
    needs: [prepare]
    strategy:
      matrix:
        node_version: [10]
        os: [ubuntu-latest, macOS-latest]
    
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}
    - name: esy install and build
      run: |
        export PACKAGE_VERSION=$(cat $GITHUB_WORKSPACE/packages/ppx/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
        export OS=$(uname | tr '[A-Z]' '[a-z]')
        npm i -g esy
        cd $GITHUB_WORKSPACE/packages/ppx && esy install
        cd $GITHUB_WORKSPACE/packages/ppx && esy build
        mkdir -p $HOME/binaries
        mv $GITHUB_WORKSPACE/packages/ppx/_build/default/bin/bin.exe $HOME/binaries/$OS
        gco release/$PACKAGE_VERSION
        mv $HOME/binaries/$OS $GITHUB_WORKSPACE/$OS
        git add .
        git commit -m "Add $OS"
        git push origin release/$PACKAGE_VERSION

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js 10
      uses: actions/setup-node@v1
      with:
        version: 10
    - name: Publish
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        export PACKAGE_VERSION=$(cat $GITHUB_WORKSPACE/packages/ppx/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
        git checkout release/$PACKAGE_VERSION
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $GITHUB_WORKSPACE/.npmrc
        npm publish
