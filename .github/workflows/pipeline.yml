name: CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [10]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
      - name: install esy
        run: npm i -g esy
      - name: esy install
        run: |
          cd packages
          cd ppx
          esy install
      - name: esy build
        run: |
          cd packages
          cd ppx
          esy build
      - name: Save artifacts
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: packages/ppx/_build/default/bin/bin.exe

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: packages/linux
      - uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: packages/darwin
      - uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: packages/windows
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          registry-url: <registry url>
      - run: yarn install
      - uses: actions/setup-node@v1
      - name: Publish
        run: |
          export PACKAGE_VERSION=$(cat $GITHUB_WORKSPACE/packages/ppx/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          mkdir -p $GITHUB_WORKSPACE/lenses-ppx
          mv $GITHUB_WORKSPACE/packages/darwin/bin.exe $GITHUB_WORKSPACE/lenses-ppx/darwin
          mv $GITHUB_WORKSPACE/packages/linux/bin.exe $GITHUB_WORKSPACE/lenses-ppx/linux
          mv $GITHUB_WORKSPACE/packages/windows/bin.exe $GITHUB_WORKSPACE/lenses-ppx/win32
          mv $GITHUB_WORKSPACE/packages/ppx/postinstall.js $GITHUB_WORKSPACE/lenses-ppx/postinstall.js
          POSTINSTALL="node ./postinstall.js"
          echo "{\"name\": \"lenses-ppx\", \"version\": \"$PACKAGE_VERSION\", \"scripts\": { \"postinstall\": \"$POSTINSTALL\" } }" > $GITHUB_WORKSPACE/lenses-ppx/package.json
          cd $GITHUB_WORKSPACE/lenses-ppx/ && npm pack
          mv $GITHUB_WORKSPACE/lenses-ppx/lenses-ppx-$PACKAGE_VERSION.tgz $GITHUB_WORKSPACE/lenses-ppx/package.tgz
      - name: Save artifacts
        uses: actions/upload-artifact@master
        with:
          name: package
          path: lenses-ppx/package.tgz
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NODE_AUTH_TOKEN }}
          package: $GITHUB_WORKSPACE/packages/lenses-ppx/package.json
